version: v1.0
name: Test Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

global_job_config:
  secrets:
    - name: ACCESS_TOKENS

  env_vars:
    - name: PHP_5_6_IMAGE
      value: sineverba/php56xc:1.6.0
    - name: PHP_7_4_IMAGE
      value: sineverba/php74xc:1.9.0
    - name: PHP_8_0_IMAGE
      value: sineverba/php8xc:1.7.0
    - name: PHP_8_1_IMAGE
      value: sineverba/php8xc:1.11.0
    - name: PHP_8_2_IMAGE
      value: sineverba/php8xc:1.15.0
    - name: SONARSCANNER_VERSION
      value: 4.8.0

  prologue:
    commands:
      - echo $DOCKER_TOKEN | docker login --username "$DOCKER_USERNAME" --password-stdin
      - checkout


blocks:
  - name: "Test"
    task:
      jobs:
        - name: Test with PHP 5.6
          commands:
            - docker run -it -w /data -v ${PWD}:/data --entrypoint "/usr/bin/composer" --rm $PHP_5_6_IMAGE install
            - docker run -it -w /data -v ${PWD}:/data --entrypoint php --rm $PHP_5_6_IMAGE vendor/bin/phpunit
        - name: Test with PHP 7.4
          commands:
            - rm composer.lock
            - docker run -it -w /data -v ${PWD}:/data --entrypoint "/usr/bin/composer" --rm $PHP_7_4_IMAGE install
            - docker run -it -w /data -v ${PWD}:/data --entrypoint php --rm $PHP_7_4_IMAGE vendor/bin/phpunit
        - name: Test with PHP 8.0
          commands:
            - rm composer.lock
            - docker run -it -w /data -v ${PWD}:/data --entrypoint "/usr/bin/composer" --rm $PHP_8_0_IMAGE install
            - docker run -it -w /data -v ${PWD}:/data --entrypoint php --rm $PHP_8_0_IMAGE vendor/bin/phpunit
        - name: Test with PHP 8.1
          commands:
            - rm composer.lock
            - docker run -it -w /data -v ${PWD}:/data --entrypoint "/usr/bin/composer" --rm $PHP_8_1_IMAGE install
            - docker run -it -w /data -v ${PWD}:/data --entrypoint php --rm $PHP_8_1_IMAGE vendor/bin/phpunit
        - name: Test with PHP 8.2
          commands:
            - rm composer.lock
            - docker run -it -w /data -v ${PWD}:/data --entrypoint "/usr/bin/composer" --rm $PHP_8_2_IMAGE install
            - docker run -it -w /data -v ${PWD}:/data --entrypoint php --rm $PHP_8_2_IMAGE vendor/bin/phpunit
        - name: Coverage
          commands:
            - rm composer.lock
            - composer install
            - docker run -it -w /data -v ${PWD}:/data --entrypoint php --rm $PHP_8_2_IMAGE vendor/bin/phpunit
            - >-
              docker run -it 
              -w /data 
              -v ${PWD}:/data 
              --entrypoint php 
              --rm 
              --env COVERALLS_REPO_TOKEN=$COVERALLS_BITLY_PHP_API_WRAPPER 
              $PHP_8_2_IMAGE 
              vendor/bin/php-coveralls 
              --coverage_clover=./logs/clover.xml 
              --json_path=./logs/coveralls-upload.json 
              -v
        - name: Sonarcloud
          commands:
            - >-
              docker run
              --rm
              -e SONAR_HOST_URL="https://sonarcloud.io"
              -e SONAR_LOGIN=$SONAR_TOKEN
              -v $PWD:/usr/src
              sonarsource/sonar-scanner-cli:$SONARSCANNER_VERSION